# -*- coding: utf-8 -*-
"""Untitled23.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1B1WCVTqxFdvWKN9TiQkLbMm6q761KN98
"""

!pip install -U langchain langchain-community sentence-transformers faiss-cpu huggingface_hub

from google.colab import files
uploaded = files.upload()

pip install langchain faiss-cpu transformers sentence-transformers

from langchain.document_loaders import TextLoader
from langchain.text_splitter import CharacterTextSplitter
from langchain.vectorstores import FAISS
from langchain.embeddings import HuggingFaceEmbeddings
from langchain.llms import HuggingFacePipeline
from langchain.chains import RetrievalQA

from transformers import AutoTokenizer, AutoModelForSeq2SeqLM, pipeline

# âœ… Step 1: Load job description
jd_loader = TextLoader("job_description.txt")
jd_docs = jd_loader.load()

# âœ… Step 2: Split into chunks
splitter = CharacterTextSplitter(chunk_size=300, chunk_overlap=30)
jd_chunks = splitter.split_documents(jd_docs)

# âœ… Step 3: Create embeddings locally
embeddings = HuggingFaceEmbeddings(model_name="sentence-transformers/all-MiniLM-L6-v2")
vectorstore = FAISS.from_documents(jd_chunks, embeddings)

# âœ… Step 4: Load resume
with open("resume.txt", "r") as f:
    resume_text = f.read()

# âœ… Step 5: Load a local model (FLAN-T5 small)
model_name = "google/flan-t5-small"
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = AutoModelForSeq2SeqLM.from_pretrained(model_name)

# Create HuggingFacePipeline
pipe = pipeline("text2text-generation", model=model, tokenizer=tokenizer, max_length=512)
llm = HuggingFacePipeline(pipeline=pipe)

# âœ… Step 6: Setup RetrievalQA chain
qa = RetrievalQA.from_chain_type(
    llm=llm,
    retriever=vectorstore.as_retriever(),
    return_source_documents=False
)

# âœ… Step 7: Query
query = f"""
Evaluate the following resume against the job description.

Resume:
{resume_text}

Return a detailed analysis of how well it matches the job description. Mention matched skills and missing areas.
"""

# âœ… Step 8: Get result
result = qa.invoke(query)

print("\nðŸ“‹ Resume Match Analysis:\n")
print(result)